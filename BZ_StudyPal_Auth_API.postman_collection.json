{
  "info": {
    "name": "BZ StudyPal - Authentication API",
    "description": "BZ StudyPal智能错题管理系统认证API测试集合",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "testEmail",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "testPassword",
      "value": "password123",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Health check successful', function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('healthy');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      }
    },
    {
      "name": "Auth Status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Auth status check successful', function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data).to.have.property('jwt');",
              "    pm.expect(jsonData.data).to.have.property('google');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/auth/status",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "status"]
        }
      }
    },
    {
      "name": "Google OAuth Config",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Google OAuth config check', function () {",
              "    // 可能返回503（未配置）或200（已配置）",
              "    pm.expect([200, 503]).to.include(pm.response.code);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/auth/google/config",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "google", "config"]
        }
      }
    },
    {
      "name": "User Registration - Invalid Data",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Invalid registration data should fail', function () {",
              "    pm.response.to.have.status(400);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "register"]
        }
      }
    },
    {
      "name": "User Registration - Valid Data",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Valid registration should succeed', function () {",
              "    pm.response.to.have.status(201);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data).to.have.property('user');",
              "    pm.expect(jsonData.data).to.have.property('tokens');",
              "    ",
              "    // 保存访问令牌",
              "    if (jsonData.data.tokens.accessToken) {",
              "        pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{testEmail}}\",\n    \"password\": \"{{testPassword}}\",\n    \"name\": \"Test User\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "register"]
        }
      }
    },
    {
      "name": "User Registration - Duplicate Email",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Duplicate email registration should fail', function () {",
              "    pm.response.to.have.status(409);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "    pm.expect(jsonData.code).to.eql('USER_EXISTS');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{testEmail}}\",\n    \"password\": \"{{testPassword}}\",\n    \"name\": \"Test User\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "register"]
        }
      }
    },
    {
      "name": "User Login - Wrong Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Login with wrong password should fail', function () {",
              "    pm.response.to.have.status(401);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "    pm.expect(jsonData.code).to.eql('INVALID_CREDENTIALS');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{testEmail}}\",\n    \"password\": \"wrongpassword\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "login"]
        }
      }
    },
    {
      "name": "User Login - Correct Credentials",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Login with correct credentials should succeed', function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data).to.have.property('user');",
              "    pm.expect(jsonData.data).to.have.property('tokens');",
              "    ",
              "    // 更新访问令牌",
              "    if (jsonData.data.tokens.accessToken) {",
              "        pm.collectionVariables.set('accessToken', jsonData.data.tokens.accessToken);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{testEmail}}\",\n    \"password\": \"{{testPassword}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "login"]
        }
      }
    },
    {
      "name": "Get User Profile - No Auth",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Get profile without auth should fail', function () {",
              "    pm.response.to.have.status(401);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "    pm.expect(jsonData.code).to.eql('NO_TOKEN');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/auth/profile",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "profile"]
        }
      }
    },
    {
      "name": "Get User Profile - With Auth",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Get profile with auth should succeed', function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data).to.have.property('user');",
              "    pm.expect(jsonData.data.user).to.have.property('email');",
              "    pm.expect(jsonData.data.user).to.have.property('name');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/auth/profile",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "profile"]
        }
      }
    },
    {
      "name": "Refresh Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Token refresh should work (may fail if no refresh token)', function () {",
              "    // 可能返回200（成功）或401（无refresh token）",
              "    pm.expect([200, 401]).to.include(pm.response.code);",
              "    ",
              "    if (pm.response.code === 200) {",
              "        var jsonData = pm.response.json();",
              "        pm.expect(jsonData.success).to.eql(true);",
              "        pm.expect(jsonData.data).to.have.property('tokens');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/refresh",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "refresh"]
        }
      }
    },
    {
      "name": "User Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Logout should succeed', function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.message).to.include('Logout successful');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/logout",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "logout"]
        }
      }
    },
    {
      "name": "Google OAuth Login - Invalid Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Google OAuth with invalid token should fail', function () {",
              "    pm.response.to.have.status(500);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(false);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"idToken\": \"invalid_google_id_token\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/google",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "google"]
        }
      }
    }
  ]
}
